// Code generated by mockery v2.26.1. DO NOT EDIT.

package mocks

import (
	models "github.com/dropdevrahul/simple-api/internal/models"
	mock "github.com/stretchr/testify/mock"
)

// UserTokenRepo is an autogenerated mock type for the UserTokenRepo type
type UserTokenRepo struct {
	mock.Mock
}

// Create provides a mock function with given fields: d, ut
func (_m *UserTokenRepo) Create(d *models.DB, ut *models.UserToken) error {
	ret := _m.Called(d, ut)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.DB, *models.UserToken) error); ok {
		r0 = rf(d, ut)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetByUserID provides a mock function with given fields: d, userID, ut
func (_m *UserTokenRepo) GetByUserID(d *models.DB, userID string, ut *models.UserToken) error {
	ret := _m.Called(d, userID, ut)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.DB, string, *models.UserToken) error); ok {
		r0 = rf(d, userID, ut)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewUserTokenRepo interface {
	mock.TestingT
	Cleanup(func())
}

// NewUserTokenRepo creates a new instance of UserTokenRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUserTokenRepo(t mockConstructorTestingTNewUserTokenRepo) *UserTokenRepo {
	mock := &UserTokenRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
